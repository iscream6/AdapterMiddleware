1.1.x : 입출차통보
1.2.x : 방문차량
1.3.x : 차량위치찾기
1.4.x : Alias
1.5.x : 일반차량
1.6.x : 블랙리스트
1.7.x : 정기(세대)차량
2.1.x : NPAutoBooth
9.1.x : 기타

1.1.1	입차 통보(넥스파 -> 미들웨어)
Body
{
  "command": "alert_incar",
  "data": {
      "dong" : "123",
      "ho" : "456",
      "car_number" : "차량번호",
      "date_time" : "yyyyMMddHHmmss",
      "kind" : "a/v", //a:세대원, v:방문객, n:일반차량
      "lprid" : "Lpr 식별 번호",
      "car_image" : "차량 이미지 경로", //미들웨어에서도 이미지를 Loading 할 수 있는 경로,
      "reg_no" : "차량 식별키", //TkNo
      "visit_in_date_time" : "yyyyMMddHHmmss", //방문시작일시, kind가 v 일 경우 외 빈값
      "visit_out_date_time" : "yyyyMMddHHmmss" //방문종료일시, kind가 v 일 경우 외 빈값
  }
}

1.1.2	입차 통보 응답
Body
{
  "command": "alert_incar",
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.1.3	출차 통보(넥스파 -> 미들웨어)
Body
{
  "command": "alert_outcar",
  "data": {
      "reg_no" : "차량 식별키", //TkNo, 2021-04-28 신규 추가
      "kind" : "a/v", //a:세대원, v:방문객, n:일반차량 2021-04-28 신규 추가
      "dong": "123",
      "ho" : "456"
      "car_number": "차량번호",
      "date_time": "yyyyMMddHHmmss",
      "lprid" : "Lpr 식별 번호",
      "car_image" : "차량 이미지 경로" //미들웨어에서도 이미지를 Loading 할 수 있는 경로
  }
}

1.1.4	출차 통보 응답)
Body
{
  "command": " alert_outcar",
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.1.5	입차 리스트 요청(미들웨어 -> 넥스파)
Body
{
  "command": "incar_list",
  "data": {
      "dong" : "123",
      "ho" : "456"
      "type" : "all/family/visitor",  //전체, 가족, 방문(등록) 향후 추가될 수 있음.
      "page" : "1", //0 : 전체, 0보다 클 경우 : count수만큼 가져올 첫 row index 
      "count" : "10" //0 : 전체, 0보다 클 경우 : 가져올 row count 
  }
}

1.1.6	입차 리스트 응답 
Body
{
  "command": "incar_list",
  "data": {
      "page" : "1", //조회한 page 번호, 요청이 0이면 0
      "list_count" : "10", //조회된 List의 자료 수, 요청한 count 보다 클수 없다.
      "remain_page": "1", //조회된 page 이후 남아 있는 page 수, page가 0이면 0
      "list" : [	
          {
          "car_number" : "차량번호",
          "type" : " family/visitor",  // 가족, 방문 (향후 추가될 수 있음)
          "date_time": "yyyyMMddHHmmss", //입차시간 
          }
      ]
  },
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.1	방문차량 리스트 요청(미들웨어 -> 넥스파)
Body
{
  "command": "visit_list",
  "data": {
      "dong": "123",
      "ho" : "456"
      "page": "1", //0 : 전체, 0보다 클 경우 : count수만큼 가져올 첫 row index 
      "count": "10" //0 : 전체, 0보다 클 경우 : 가져올 row count 
  }
}

1.2.1.1 방문차량 리스트 요청 Type-2 (웹통합 전용)
Body
{
  "command": "visit_list2",
  "data": {
      "car_number" : "차량번호", //빈값 허용, 빈값 일 시 검색 조건에서 제외함.
      "dong": "123",
      "ho" : "456",
      "event_date_time":"yyyyMMddHHmmss", //조회 기준일, 빈값일 경우 전체 기간 조회
      "eventType":"A/F/H" //A:전체, F:event_date_time을 포함한 미래, H:event_date_time을 제외한 과거이력
  }
}

1.2.2	방문차량 리스트 응답
Body
{
"command": "visit_list",
  "data": {
      "page" : "1" //조회한 page 번호, 요청이 0이면 0
      "list_count" : "10", //조회된 List의 자료 수, 요청한 count 보다 클수 없다.
      "remain_page": "1", //조회된 page 이후 남아 있는 page 수, page가 0이면 0
      "list" : [
          {
              "reg_no" : "방문차량식별키",
              "car_number" : "차량번호",
              "date": "yyyyMMdd", //등록(방문) 일 
              "term" : "1", //방문일수
              "visit_flag" : "y/n" //y:방문, n:미방문
          }
      ]
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

1.2.2.1 방문차량 리스트 응답 Type-2 (웹통합 전용)
Body
{
"command": "visit_list2",
  "data": {
      "list" : [
          {
              "reg_no" : "방문차량식별키",
              "car_number" : "차량번호",
              "dong" : "101",
              "ho" : "101",
              "start_date_time": "yyyyMMddHHmmss", //등록(방문) 입차 예약 일시, 빈값 허용
              "end_date_time" : "yyyyMMddHHmmss", //등록(방문) 입차 예약 종료, 빈값 허용
              "visit_flag" : "y/n" //y:방문, n:미방문
          }
      ]
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.3	단일 방문차량 리스트 요청(미들웨어 -> 넥스파)
Body
{
  "command": "visit_single_list",
  "data": {
      "car_number" = "차량번호"
      "dong": "123",
      "ho" : "456"
  }
}

1.2.4	방문차량 리스트 응답
Body
{
"command": "visit_single_list",
  "data": {
      "list" : [
          {
              "reg_no" : "방문차량식별키",
              "car_number" : "차량번호",
              "start_date": "yyyyMMdd", //등록(방문) 일 
              "end_date" : "yyyyMMdd", //등록(방문) 종료일
              "visit_flag" : "y/n", //y:방문, n:미방문
              "remark" : "비고"
          }
      ]
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.5	방문차량 등록 요청
Body
{
  "command": "visit_reg",
  "data": {
      "dong": "123",
      "ho" : "456"
      "car_number": "차량번호", 
      "date": "yyyyMMdd", //등록(방문) 일 
      "term": "1" //방문일수
  }
}

1.2.5.1	방문차량 등록 요청 Type-2 (웹통합 전용)
Body
{
  "command": "visit_reg2",
  "data": {
      "dong": "123",
      "ho" : "456"
      "car_number": "차량번호", 
      "start_date_time": "yyyyMMddHHmmss", //등록(방문) 입차 예약 일시, 빈값 허용
      "end_date_time" : "yyyyMMddHHmmss", //등록(방문) 입차 예약 종료, 빈값 허용
  }
}

1.2.6	방문차량 등록 응답
Body
{
  "command": "visit_reg", //visit_reg2로 요청시 응답 command는 visit_reg2
  "data" : {
      "reg_no" : "방문차량식별키"
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.7  방문차량 수정 요청
Body
{
  "command": "visit_modify",
  "data": {
      "dong": "123",
      "ho" : "456",
      "reg_no" : "방문차량식별키",
      "car_number": "차량번호",
      "date" : "yyyyMMdd", //등록(방문) 일 
      "term": "1" //방문일수
  }
}

1.2.8  방문차량 수정 응답
Body
{
  "command": "visit_modify",
  "data" : {
      "reg_no" : "방문차량식별키"
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.9	방문차량 삭제 요청(미들웨어 -> 넥스파)
Body
{
  "command": "visit_del",
  "data": {
      "dong": "123",
      "ho" : "456",
      "reg_no" : "방문차량식별키",
      "car_number": "차량번호"
  }
}

1.2.9.1 방문차량 삭제 요청 Type-2 (웹통합 전용)
Body
{
  "command": "visit_del2",
  "data": {
      "dong" : "123",
      "ho" : "456",
      "car_number" : "차량번호" //복수의 차량번호가 입력될 시 '&'로 구분
  }
}

1.2.10	방문차량 삭제 응답
Body
{
  "command": "visit_del", //visit_del2로 요청시 응답 command는 visit_del2
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.11	방문차량 즐겨찾기 리스트 요청(미들웨어 -> 넥스파)
Body
{
  "command": "visit_favo_list",
  "data": {
      "dong": "123",
      "ho" : "456"
  }
}

1.2.12	방문차량 즐겨찾기 리스트 응답
Body
{
  "command": "visit_favo_list",
  "data": {
      "list" : [
          {
              "reg_no" : "방문차량즐겨찾기식별키",
              "car_number" : "차량번호",
              "date_time" : "yyyyMMddHHmmss", 
              "register" : " 홍길동/월패드 ", 
          }
      ]
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.13	방문차량 즐겨찾기 등록 요청(미들웨어 -> 넥스파)
Body
{
  "command": "visit_favo_reg",
  "data": {
      "dong": "123",
      "ho" : "456"
      "car_number": "차량번호",
      "register" : "등록자" //App에서 등록시 등록자명, 월패드에서 등록시 ‘월패드’
  }
}

1.2.14	방문차량 즐겨찾기 등록 응답
Body
{
  "command" : "visit_favo_reg",
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

정상등록 시
status : 200, message : OK
방문차량 번호 중복 등록 시도 시
status : 319, message : Already registed favorites car.

=====================================

1.2.15	방문차량 즐겨찾기 삭제 요청(미들웨어 -> 넥스파)
Body
{
  "command" : "visit_favo_del",
  "data": {
      "dong": "123",
      "ho" : "456",
      "reg_no" : "방문차량즐겨찾기식별키",
      "car_number": "차량번호"
  }
}

1.2.16 방문차량 즐겨찾기 삭제 응답
Body
{
  "command" : "visit_favo_del",
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.17	방문차량 출입조회 요청(미들웨어 -> 넥스파)
Body
{
  "command" : "visit_single_io",
  "data": {
      "dong": "123",
      "ho" : "456",
      "car_number": "차량번호"
  }
}

1.2.18 방문차량 출입조회 응답
Body
{
  "command" : "visit_single_io",
  "data": {
      "list" : [
          {
              "park_no" : "주차장번호",
              "reg_no" : "방문차량식별키",
              "car_number" : "차량번호",
              "dong" : "동",
              "ho" : "호",
              "in_date_time" : "yyyyMMddHHmmss",
              "out_date_time" : "yyyyMMddHHmmss",
          }
      ]
  },
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.2.19	방문차량 체크 요청
Body
{
  "command" : "visit_check",
  "data": {
      "park_no" : "주차장번호"
      "car_number": "차량번호"
  }
}

1.2.20 방문차량 체크 응답
Body
{
  "command" : "visit_check",
  "data": {
      "check_yon" : "방문여부 Y/N",
      "dong": "동",
      "ho": "호",
      "remark" : "사유"
  },
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.3.1	차량위치찾기 요청(미들웨어 -> 넥스파) 사용안하는듯.....
Body
{
  "command" : "car_location",
  "data": {
      "car_number": "차량번호"
  }
}

1.3.2	차량위치찾기 응답(넥스파 -> 미들웨어)
Body
{
  "command" : "location_map",
  "data": {
      "car_number": "차량 번호",
      "alias": "별칭",
      "location_text": "위치정보 텍스트",
      "pixel_x": "이미지 내 X좌표",
      "pixel_y": "이미지 내 Y좌표",
      "in_datetime": "yyyy-MM-dd hh:mm:ss"
      "car_image":"http://10.31.3.103:9070/gImage/2018/05/28/01B1001005/20180528102640_97수1607.jpg"
  },
  "result": {
      "status": "응답상태코드", 
      "message": "메시지"
  }
}

=====================================

1.3.3	차량위치찾기 요청(미들웨어 - 1.1.19 과 연관)
Body
{
  "command" : "location_map",
  "data": {
      "car_number": "차량번호",
      "dong" : "123",
      "ho" : "456"
  }
}

=====================================

1.3.4	차량리스트위치찾기 요청(미들웨어 - x.x.xx 과 연관)
Body
{
  "command" : "location_list",
  "data": {
      "dong" : "123",
      "ho" : "456",
      "type" : "family/car" //가족, 차량
  }
}

=====================================

1.4.1	Alias 가져오기 요청
Body
{
  "command" : "car_alias",
  "data": {
      "list" : [{"car_number" : "차량 번호"}]
  }
}

1.4.2	Alias 가져오기 응답
Body
{
  "command" : "car_alias",
  "data": {
      "list" : [{
      "car_number" : "차량 번호"
      "alias" : "차량 별명"
      }]
  },
  "result": {
      "status": "응답상태코드", 
      "message": "메시지"
  }
}

=====================================

1.4.3	Alias 변경 요청
Body
{
  "command" : "car_alias_modify",
  "data": {
      "dong" : "123",
      "ho" : "456",
      "car_number" = "차량 번호",
      "alias" = "차량 별명"
  }
}

1.4.4	Alias 변경 응답
Body
{
  "command" : "car_alias_modify",
  "result": {
      "status": "응답상태코드", 
      "message": "메시지"
  }
}

=====================================

1.5.1	일반차량 조회 요청
Body
{
  "command": "ion_list",
  "data": {
      "car_number": "차량번호",
      "start_date_time" : "yyyyMMddHHmmss", //조회시작일시
      "end_date_time" : "yyyyMMddHHmmss" //조회종료일시
  }
}

1.5.1	일반차량 조회 응답
Body
{
  "command": "ion_list",
  "data" : {
      "list" : [
          {
              "park_no" : "주차장번호",
              "reg_no" : "일반차량식별키",
              "car_number" : "차량번호",
              "in_date_time" : "yyyyMMddHHmmss", //입차일시
              "out_date_time" : "yyyyMMddHHmmss", //출차일시
          }
      ]
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.6.1	블랙리스트 요청
Body
{
  "command" : "blacklist_list",
  "data": {
      "page" : "1", //0 : 전체, 0보다 클 경우 : count수만큼 가져올 첫 row index 
      "count" : "10" //0 : 전체, 0보다 클 경우 : 가져올 row count 
  }
}

1.6.2	블랙리스트 응답
Body
{
  "command" : "blacklist_list",
  "data": {
      "page" : "1", //조회한 page 번호, 요청이 0이면 0
      "list_count" : "10", //조회된 List의 자료 수, 요청한 count 보다 클수 없다.
      "remain_page": "1", //조회된 page 이후 남아 있는 page 수, page가 0이면 0
      "list" : [{
      "reg_no" : "등록 번호",
      "car_number" : "차량 번호",
      "date": "yyyyMMdd", //등록(방문) 일 
      "reason" : "사유"
      }]
  },
  "result": {
      "status": "응답상태코드", 
      "message": "메시지"
  }
}

=====================================

1.6.3	블랙리스트 등록 요청(미들웨어 -> 넥스파)
Body
{
  "command": "blacklist_reg",
  "data": {
      "car_number": "차량번호", 
      "reason": "사유"
  }
}

1.6.4	블랙리스트 등록 응답
Body
{
  "command": "blacklist_reg",
  "data" : {
      "reg_no" : "차량식별키"
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.6.5	블랙리스트 삭제 요청(미들웨어 -> 넥스파)
Body
{
  "command": "blacklist_del",
  "data": {
      "reg_no" : "차량식별키",
      "car_number": "차량번호"
  }
}

1.6.6	블랙리스트 삭제 응답
Body
{
  "command": "blacklist_del",
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.6.7	블랙리스트 단일 차량 조회 요청(미들웨어 -> 넥스파)
Body
{
  "command" : "blacklist_car",
  "data": {
      "car_number" : "차량 번호"
  }
}

1.6.8	블랙리스트 단일 차량 조회 응답
Body
{
  "command" : "blacklist_car",
  "data": {
      "code" : "y/n" //블랙리스트 차량여부(y:블랙리스트 차량, n:블랙리스트차량 아님)
      "reg_no" : "등록 번호",
      "car_number" : "차량 번호",
      "date": "yyyyMMdd", //등록(방문) 일 
      "reason" : "사유"
  },
  "result": {
      "status": "응답상태코드", 
      "message": "메시지"
  }
}

=====================================

1.7.1	정기차량 등록 요청
Body
{
  "command": "cust_reg",
  "data": {
      "dong" : "동",
      "ho" : "호 ",
      "car_number" : "차량번호",
      "name" : "성명",
      "tel_number" : "전화번호",
      "remark" : "비고",
      "start_date" : "yyyyMMdd",
      "end_date" : "yyyyMMdd",
      }
  }
}

1.7.2	정기차량 등록 응답
Body
{
"command": "cust_reg",
  "data": {
      "park_no" : "주차장번호"
      "reg_no" : "등록번호", //등록된 TkNo
      "car_number" : "차량번호",
      "type" : "등록타입" //1:신규, 2:수정
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.7.3	정기차량 삭제 요청
Body
{
  "command": "cust_del",
  "data": {
      "dong": "123",
      "ho" : "456"
      "car_number": "차량번호", 
      "reg_no" : "등록번호"
  }
}

1.7.4	정기차량 삭제 응답
Body
{
  "command": "cust_del",
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.7.5  정기차량 조회 요청
Body
{
  "command": "cust_list",
  "data": {
      "dong": "123", //빈 값 : 전체 동 조회
      "ho" : "456", //빈 호 : 전체 호 조회
      "car_number": "차량번호" //빈 차량번호 : 전체 정기차량 조회
  }
}

1.7.6  정기차량 조회 응답
Body
{
  "command": "cust_list",
  "data" : {
      "list" : [
          {
              "park_no" : "주차장번호",
              "reg_no" : "정기차량식별키",
              "car_number" : "차량번호",
              "dong" : "123",
              "ho" : "456",
              "name" : "차주명",
              "tel_number" : "전화번호",
              "remark" : "비고",
              "start_date" : "yyyyMMdd", //정기권 시작일
              "end_date" : "yyyyMMdd" //정기권 종료일
          }
      ]
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.7.7	정기차량 출입 조회 요청
Body
{
  "command": "cust_io_list",
  "data": {
      "car_number": "차량번호",
      "start_date_time" : "yyyyMMddHHmmss", //조회시작일시
      "end_date_time" : "yyyyMMddHHmmss" //조회종료일시
  }
}

1.7.8	정기차량 출입 조회 응답
Body
{
  "command": "cust_io_list",
  "data" : {
      "list" : [
          {
              "park_no" : "주차장번호",
              "reg_no" : "정기차량식별키",
              "car_number" : "차량번호",
              "dong" : "123",
              "ho" : "456",
              "in_date_time" : "yyyyMMddHHmmss", //입차일시
              "out_date_time" : "yyyyMMddHHmmss", //출차일시
          }
      ]
  }
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

=====================================

1.7.9	세대등록 차량찾기 요청
Body
{
  "command" : "find_car",
  "data": {
      "dong" : "123",
      "ho" : "456",
  }
}

1.7.10	세대등록 차량찾기 응답
Body
{
  "command" : "find_car",
  "data": {
      "list" : [{
      "car_number" : "차량 번호",
      "date": "yyyyMMdd", //등록(방문) 일 
      "alias" : "차량 별명"
      }]
  },
  "result": {
      "status": "응답상태코드", 
      "message": "메시지"
  }
}

=====================================

2.1.1 AutoBooth AliveCheck 요청
Body
{
    "command" : "alive_check",
}

2.1.2 AutoBooth AliveCheck 응답
Body
{
    "command" : "alive_check",
    "data" : 
    {
        "booth_list" :
        [
            {
                "park_no" : "주차장번호1",
                "unit_no" : "차단기번호1",
                "unit_name" : "차단기명1"
            },
            {
                "park_no" : "주차장번호2",
                "unit_no" : "차단기번호2",
                "unit_name" : "차단기명2"
            }
        ]
        "lpr_list" : 
        [
            {
                "park_no" : "주차장번호1",
                "unit_no" : "차단기번호1",
                "unit_name" : "차단기명1"
            },
            {
                "park_no" : "주차장번호2",
                "unit_no" : "차단기번호2",
                "unit_name" : "차단기명2"
            }
        ],
        "dcinfo_list" : 
        [
            {
                "park_no" : "주차장번호1",
                "dc_no" : "할인번호1",
                "dc_name" : "할인명1"
            },
            {
                "park_no" : "주차장번호2",
                "dc_no" : "할인번호2",
                "dc_name" : "할인명2"
            }
        ]
    }
    "result" : 
    {
        "status": "응답상태코드", 
        "message": "메시지"
    }
}

=====================================

2.1.3 AutoBooth 차단바 오픈 요청
Body
{
    "command" : "bar_open",
    "data" :
    {
        "park_no" : "주차장 번호",
        "booth_unit_no" : "정산기 번호"
        "lpr_unit_no" : "차단기 번호"
    }
}

2.1.4 AutoBooth 차단바 오픈 응답
Body
{
    "command" : "bar_open",
    "result" :
    {
        "status" : "응답상태 코드",
        "message" : "메시지"
    }
}

2.1.5 AutoBooth 할인 요청
Body
{
    "command" : "discount",
    "data" :
    {
        "park_no" : "주차장 번호",
        "unit_no" : "정산기 번호",
        "dc_no" : "할인번호"
    }
}

=====================================

9.1.1	우정항공 바코드 결과 요청(넥스파 -> 미들웨어)
Body
{
    "command": "etc_uj_air",
    "data": {
        "mawb_no" : "바코드리딩번호"
    }
}

9.1.2	우정항공 바코드 결과 응답(미들웨어 -> 넥스파)
Body
{
    "command": "etc_uj_air",
    "data": {
        "result" : "Y/N",
        "msg" : "API 문서에 정의된 Message",
        "msgCode" : "API 문서에 정의된 Message Code"
    },
      "result" : 
    {
        "status": "응답상태코드", 
        "message": "메시지"
    }
}

9.1.3   세대 포인트 초회 요청(미들웨어 -> 넥스파)
Body
{
  "command" : "remain_point",
  "data": {
      "dong" : "123",
      "ho" : "456",
  }
}

9.1.4   세대 포인트 초회 응답(미들웨어 -> 넥스파)
Body
{
  "command" : "remain_point",
  "data": {
      "point" : "6000", //남은 포인트
      "used_point" : "0", //사용한 포인트
      "point_unit" : "H/M" //포인트 단위(H:시, M:분, 기타 현장 요구에 따라 추가 협의 필요)
  },
  "result": {
      "status": "응답상태코드", 
      "message": "메시지"
  }
}

9.1.5 주차차량 리스트 조회 요청
Body
{
    "command": "car_list",
    "data": {
        "kind" : "a/v" //a : 정기차량, v : 방문차량
        "page": "1", //0 : 전체, 0보다 클 경우 : count수만큼 가져올 첫 row index 
        "count": "10", //0 : 전체, 0보다 클 경우 : 가져올 row count 
        "reg_no" : "차량 식별키", //TkNo, where 조건, 빈값 허용
        "start_date_time" : "조회시작일시", //where 조건, 빈값 허옹
        "end_date_time" : "조회종료일시", //where 조건, 빈값 허용
        "car_number" : "차량번호", //where 조건, 빈값 허용
        "tel_number" : "전화번호" //where 조건, 빈값 허용
  }    
}

9.1.6 주차차량 리스트 조회 응답
Body
{
    "command" : "car_list",
    "data" : {
        "list" : [
        {
            "reg_no" : "차량 식별키", //TkNo
            "car_number" : "차량번호",
            "kind" : "a/v", "a : 입주민, v : 방문객"
            "start_date_time": "yyyyMMddHHmmss", //등록(방문) 일시
            "end_date_time" : "yyyyMMddHHmmss", //등록(방문) 종료 일시
            "dong" : "123",
            "ho" : "456",
            "name" : "성명",
            "tel_number" : "전화번호",
            "remark" : "비고",
            "created_date_time" : "yyyyMMddHHmmss", //DB 등록일시
        },
        .
        .
        .
        ]
    },
    "result": {
        "status": "응답상태코드", 
        "message": "메시지"
  }
}

9.1.7 할당동기화 요청 (넥스파 -> 미들웨어)
Body
{
  "command": "sync_assign",
  "data": {
      "list" : [
        {
            "park_no" : "주차장번호",
            "dong" : "123",
            "ho" : "456",
            "type" : "MINUTE",
            "enable_point" : "가용 포인트",
            "used_point" : "사용 포인트", 
            "acp_date" : "yyyyMMdd",
            "exp_date" : "yyyyMMdd"
        },
        {
            ...
        }
      ]
      
  }
}

9.1.8	할당동기화 응답 (미들웨어 -> 넥스파)
Body
{
  "command": "sync_assign",
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}

9.1.9  핸드쉐이크 (주차 -> 미들웨어)
Body
{
    "command" : "hello",
    "data" : "[구분값]" //현장 구성에 따라 가변(alert : 통보전용, biz : 요청처리전용)
}

9.1.10 핸드쉐이크 ACK (미들웨어 -> 주차)
Body
{
  "command": "hello",
  "result": {
      "status": "응답상태코드",
      "message": "메시지"
  }
}